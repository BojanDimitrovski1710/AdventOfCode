(INCOMPLETE)

/******************************************************************************

                            Online Java Compiler.
                Code, Compile, Run and Debug java program online.
Write your code in this editor and press "Run" button to execute it.

*******************************************************************************/
import java.util.*;


public class Main
{
    public static int height = 16;
    public static int width = 11;
    public static char[][] dotted_paper = new char[height][width];
    
    public static void print_paper(char[][] matrix){
        for(int i=0; i<height; i++){
            for(int j=0; j<width; j++){
                System.out.print(matrix[i][j]);
                System.out.print(" ");
            }
            System.out.println();
        }
    }
    
    public static int countDots(char[][] matrix){
        int counter =0;
        for(int i=0; i< height; i++){
            for(int j=0; j<width; j++){
                if(matrix[i][j] == '#')
                    counter++;
            }
        }
        return counter;
    }
    
    public static char[][] foldByX(char[][] matrix, int x){
        char[][] result = new char[height][x];
        result = clearPaper(result, height, x);
        
        for(int i=0; i< height; i++){
            matrix[i][x] = '|';
        }
        
        if(x < width/2){
            
        }
        
        Main.width = x;
        return result;
    }
    
    public static char[][] foldByY(char[][] matrix, int y){
        char[][] result = new char[y][width];
        result = clearPaper(result, y, width);
        int i=0, j=0;
        
        for(i=0; i<width; i++){
            matrix[y][i] = '-';
        }
        
        if(y< height/2){
            i=0;
            j=0;
            while(matrix[i][j] != '-'){
                for(j=0; j<width; j++){
                    if(matrix[i][j]=='#' || matrix[height - y - i][j]=='#'){
                        result[i][j] = '#'
                    }
                }
                i++;
            }
        }else{
            i=height-1;
            j=0;
            while(matrix[i][j] != '-'){
                for(j=0; j<width; j++){
                    if(matrix[i][j]=='#' || matrix[y-(i-y)][j]=='#'){
                        result[i][j]='#';
                    }
                }
            }
            i--;
        }
        
        height = y;
        return result;
    }
    
    public static char[][] clearPaper(char[][] paper, int x, int y){
       for(int i=0; i<x; i++){
	        for(int j=0; j<y; j++){
	            paper[i][j] = '.';
	        }
	    }
	    return paper;
    }
    
	public static void main(String[] args){
	    Scanner sc = new Scanner(System.in);
	    boolean is_running = true;
	    
	    clearPaper(dotted_paper, height, width);
	    while(is_running){
	        String input = sc.nextLine();
	        if(input.equals("end")){
	            is_running = false;
	        }else{
    	        String[] split = input.split(",");
    	        int x = Integer.parseInt(split[0]);
    	        int y = Integer.parseInt(split[1]);
    	        dotted_paper[y][x] = '#';
	        }
	    }
	    
	    print_paper(dotted_paper);
	    System.out.println("");
	    
	    char[][] fold1 = new char[7][width];
	    fold1 = foldByY(dotted_paper, 7);
	    
	    print_paper(fold1);
	    System.out.println("");
	    
	    char[][] fold2 = new char[height][5];
	    fold2 = foldByX(fold1, 5);
	   
	    print_paper(fold2);
	    int res = countDots(fold2);
	    System.out.println("Number of dots is: " + res);
	}
}
